# SQL-Front 5.1  (Build 4.16)

/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE */;
/*!40101 SET SQL_MODE='NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES */;
/*!40103 SET SQL_NOTES='ON' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;


# Host: localhost    Database: 471
# ------------------------------------------------------
# Server version 5.0.51b-community-nt-log

DROP DATABASE IF EXISTS `471`;
CREATE DATABASE `471` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `471`;

CREATE TABLE EMPLOYEE  

(SSN		CHAR(9)	NOT NULL, 

First_Name 	VARCHAR(15)	NOT NULL, 

Last_Name	VARCHAR(15)	NOT NULL, 

Address		VARCHAR(30), 

Salary		DECIMAL(10,2), 

Phone_number VARCHAR(15), 

Username 	VARCHAR(15)	NOT NULL, 

Password 	VARCHAR(15)	NOT NULL, 

Job_type	VARCHAR(15)	NOT NULL, 

PRIMARY KEY (SSN) ); 

INSERT INTO EMPLOYEE VALUES (123456789, "Rachel", "Dalton", "Calgary", 10000, "123-456-7891", "rdalton", "471", "Manager");
INSERT INTO EMPLOYEE VALUES (123456788, "Ammar", "Elzeftawy", "Calgary", 10000, "123-456-7891", "aelzeftawy", "471", "Pharmacist");
INSERT INTO EMPLOYEE VALUES (123456777, "Jana", "Afifi", "Calgary", 10000, "123-456-7891", "jafifi", "471", "Assistant");


CREATE TABLE PHARMACIST 

(SSN		CHAR(9)	NOT NULL, 

License_number VARCHAR(15)	NOT NULL, 

PRIMARY KEY (SSN), 

FOREIGN KEY(SSN) REFERENCES EMPLOYEE(SSN)

ON DELETE CASCADE	ON UPDATE CASCADE); 

INSERT INTO PHARMACIST VALUES (123456788, 12345);
INSERT INTO PHARMACIST VALUES (123456789, 54321);


CREATE TABLE MANAGER 

(SSN		CHAR(9)	NOT NULL, 

PRIMARY KEY (SSN), 

FOREIGN KEY(SSN) REFERENCES PHARMACIST(SSN)

ON DELETE CASCADE	ON UPDATE CASCADE); 

INSERT INTO MANAGER VALUES (123456789);


CREATE TABLE ASSISTANT 

(SSN		CHAR(9)	NOT NULL, 

PRIMARY KEY (SSN), 

FOREIGN KEY(SSN) REFERENCES EMPLOYEE(SSN) 

ON DELETE CASCADE	ON UPDATE CASCADE); 

INSERT INTO ASSISTANT VALUES (123456777);

 

CREATE TABLE DOCTOR 

(License_number VARCHAR(15)	NOT NULL, 

SPECIALTY	VARCHAR(20), 

First_Name 	VARCHAR(15)	NOT NULL, 

Last_Name	VarCHAR(15)	NOT NULL, 

Phone_number VARCHAR(15), 

Office_address	VARCHAR(30), 

PRIMARY KEY (License_number));

 

CREATE TABLE DELIVERY 

(DeliveryID	VARCHAR(15)	NOT NULL, 

Shipping_date	DATE, 

Delivery_date	DATE		NOT NULL, 

Confirmation	VARCHAR(30), 

PRIMARY KEY (DeliveryID));

 

CREATE TABLE PATIENT 

(PHN	       	CHAR(9)	NOT NULL, 

Address    VARCHAR(30), 

First_Name 	VARCHAR(15)	NOT NULL, 

Last_Name	VARCHAR(15)	NOT NULL, 

Phone_number VARCHAR(15), 

Date_of_birth	DATE		NOT NULL, 

PRIMARY KEY (PHN));

 

CREATE TABLE PATIENT_ALLERGY 

(PHN		CHAR(9)	NOT NULL, 

Allergy		VARCHAR(30), 

PRIMARY KEY (PHN), 

FOREIGN KEY(PHN) REFERENCES PATIENT(PHN) 

ON DELETE CASCADE	ON UPDATE CASCADE); 

 

CREATE TABLE APPOINTMENT 

(Date 	DATE	NOT NULL,

Time		TIME		NOT NULL, 

Type1	VARCHAR(30)	NOT NULL, 

SSN		CHAR(9)	NOT NULL, 

PHN		CHAR(9)	NOT NULL, 

PRIMARY KEY (Time), 

UNIQUE (PHN)


); 
INSERT INTO APPOINTMENT VALUES ( "10-05-2002","23:59","Rachel", "123",  "10000");

 

CREATE TABLE INVENTORYORDER 

(OrderID	VARCHAR(15)	NOT NULL, 

Order_date	DATE		NOT NULL, 

Delivery_date	DATE		NOT NULL, 

PRIMARY KEY (OrderID)); 

 

CREATE TABLE INVENTORY_ITEM 

(DIN			VARCHAR(15)	NOT NULL, 

Name			VARCHAR(15)	NOT NULL, 

Cost_per_item		DECIMAL(10,2)	NOT NULL, 

Min_allowable		DECIMAL(10)	NOT NULL, 

Max_allowable		DECIMAL(10)	NOT NULL, 

Info			VARCHAR(100)	NOT NULL, 

Quantity_on_hand	DECIMAL(10)	NOT NULL,		 

PRIMARY KEY (DIN)); 


CREATE TABLE PRESCRIPTION 

(PrescriptionID VARCHAR(15)	NOT NULL, 

Date		DATE, 

Workflow_state VARCHAR(15), 

PHN	      	CHAR(9), 

SSN		CHAR(9), 

License_number VARCHAR(15), 

DeliveryID	VARCHAR(15), 

DIN		VARCHAR(15), 

QUANTITY	DECIMAL(10), 

PRIMARY KEY (PrescriptionID), 

FOREIGN KEY(PHN) REFERENCES PATIENT(PHN)

ON DELETE CASCADE	ON UPDATE CASCADE, 

FOREIGN KEY(SSN) REFERENCES PHARMACIST(SSN)

ON DELETE CASCADE	ON UPDATE CASCADE, 

FOREIGN KEY(License_number) REFERENCES DOCTOR(License_number)

ON DELETE CASCADE	ON UPDATE CASCADE, 

FOREIGN KEY(DeliveryID) REFERENCES DELIVERY(DeliveryID)

ON DELETE CASCADE	ON UPDATE CASCADE, 

FOREIGN KEY(DIN) REFERENCES INVENTORY_ITEM(DIN)

ON DELETE CASCADE	ON UPDATE CASCADE); 


CREATE TABLE FOLLOWUP 

(Date		DATE		NOT NULL, 

Notes 		VARCHAR(100)	NOT NULL, 

SSN		CHAR(9)	NOT NULL, 

PrescriptionID	VARCHAR(15)	NOT NULL, 

PRIMARY KEY (Date), 

UNIQUE (PrescriptionID), 

FOREIGN KEY(SSN) REFERENCES PHARMACIST(SSN)

ON DELETE CASCADE	ON UPDATE CASCADE, 

FOREIGN KEY(PrescriptionID) REFERENCES PRESCRIPTION(PrescriptionID) 

ON DELETE CASCADE	ON UPDATE CASCADE); 



CREATE TABLE VACCINE_RECORD 

(DIN			VARCHAR(15)	NOT NULL, 

Date    Date NOT NULL,

SSN			Char(9)	NOT NULL, 

DoseNumber			CHAR(9)	NOT NULL,		  

FOREIGN KEY(DIN) REFERENCES INVENTORY_ITEM(DIN)

ON DELETE CASCADE	ON UPDATE CASCADE,

FOREIGN KEY(SSN) REFERENCES PHARMACIST(SSN)

ON DELETE CASCADE	ON UPDATE CASCADE 
); 

#
# Dumping data for table users
#

UNLOCK TABLES;

/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;